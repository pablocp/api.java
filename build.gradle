/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

buildscript {
    repositories {
		mavenLocal()
		mavenCentral()
    }
    dependencies {
		classpath group: 'com.liferay', name: 'com.liferay.gradle.plugins.source.formatter', version: '1.0.1'
    }
}

group 'com.wedeploy'
version '1.0.0-alpha.5'

ext {
	joddhttp = 'org.jodd:jodd-http:3.7.0-20160307'
	joddjson = 'org.jodd:jodd-json:3.7.0-20160307'
	jsonassert = 'org.skyscreamer:jsonassert:1.2.3'
	junit = 'junit:junit:4.11'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'jacoco'
	apply plugin: 'com.liferay.source.formatter'

	version = rootProject.version
	group = rootProject.group

	repositories {
		mavenLocal()
		jcenter()
		mavenCentral()
	}

	tasks.withType(Test) {
		testLogging {
			events "passed", "skipped", "failed"
		}
	}

	jacocoTestReport {
		additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
		classDirectories =  files(sourceSets.main.output)
		sourceDirectories = files(sourceSets.main.allSource.srcDirs)
		reports {
			csv.enabled false
			xml.enabled false
			html {
				enabled true
				destination "${buildDir}/reports/coverage"
			}
		}
	}

	test.finalizedBy(project.tasks.jacocoTestReport)
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}
