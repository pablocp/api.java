/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

buildscript {
    repositories {
		maven {
			url 'https://repository.liferay.com/nexus/content/groups/liferay-ce'
		}
    }
    dependencies {
		classpath group: 'com.liferay', name: 'com.liferay.gradle.plugins.source.formatter', version: '1.0.1'
    }
}

plugins {
	id "com.jfrog.bintray" version "1.3"
}

version = '0.45.7'
group = 'com.liferay.launchpad'

ext {
	joddVersion = '3.7.0-20160307'
	lib = [
		junit        	: 'junit:junit:4.11',
		jsonassert		: 'org.skyscreamer:jsonassert:1.2.3',
		mockito			: 'org.mockito:mockito-all:1.10.19'
	]
}

apply plugin: 'eclipse'
apply plugin: 'idea'

allprojects {
	version = rootProject.version
	group = rootProject.group

	repositories {
		jcenter()
		mavenLocal()
		mavenCentral()
	}
}

/**
 * Global IntelliJ configuration.
 */
idea {
	module {
		name = 'api-java'
		excludeDirs += file('.idea')
	}
}

/**
 * Subprojects configuration.
 */
subprojects {
	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'com.liferay.source.formatter'
	apply plugin: 'com.jfrog.bintray'
	apply from: "${rootProject.projectDir}/gradle/bintray.gradle"

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	compileJava.options.fork = true
	compileJava.options.compilerArgs << "-Xlint:-options"
	compileJava.options.incremental = true

	configurations {
		published
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	artifacts {
		archives jar
		archives sourcesJar

		published jar
		published sourcesJar
	}

	test {
		reports.html.enabled = false
	}

	tasks.withType(Test) { testTask ->
		configure(testTask) {
			beforeTest { descriptor ->
				logger.lifecycle("\t" + descriptor)
			}
		}
	}

	idea {
		module {
			inheritOutputDirs true
		}
	}
}

task bintray {
	group 'Publishing'
	description 'Publish all artifcats to bintray'

	dependsOn subprojects.bintrayUpload
}

task version() {
	println "----------"
	println "$rootProject.name: $version"
	println "----------"
}

/**
 * Gradle wrapper.
 */
task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}
